import telebot;

from dotenv import dotenv_values

from api.freetts_api import FreettsApi

config = dotenv_values(".env")

class VoiceActingTeleBot(telebot.TeleBot):
    _keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)

    def __init__(self):
        super().__init__(config.get("TELEGRAM_API_TOKEN"))

    def send_welcom(self, message):
        self.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! üëãüòÉ", reply_markup=self._keyboard)

    def synthesized_text(self, message):
        freetts_api = FreettsApi()

        self.send_message(message.chat.id, f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å id {message.message_id} –Ω–∞—á–∞–ª–∞—Å—å. üü°")

        response = freetts_api.get_synthesized_text(message.text, "ru-RU068")

        if (response['status'] == 200 and response['data']):
            self.send_document(message.chat.id, freetts_api.get_base_url() + response['data']['src'], caption=f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å id {message.message_id} –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å. üü¢")
            self.delete_message(message.chat.id, message.message_id)
        elif (response['status'] != 200 and response['message']):
            self.reply_to(message, f"{response['message']}, id —Å–æ–æ–±—â–µ–Ω–∏—è {message.message_id}. üî¥")
        else:
            self.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å id: {message.message_id}. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ. üî¥")


voice_acting_tele_bot = VoiceActingTeleBot()

@voice_acting_tele_bot.message_handler("start")
def send_message(message):
    voice_acting_tele_bot.send_welcom(message)

@voice_acting_tele_bot.message_handler(content_types="text")
def synthesized_text(message):    
    voice_acting_tele_bot.synthesized_text(message)
    
voice_acting_tele_bot.infinity_polling()

